
List<Integer> mylist=Arrays.asList(1,2,3,4,5,6,7,8,9,10);

List<Integer> even=new ArrayList<>();
List<Integer> odd=new ArrayList<>();

Map<Boolean, List<Integer>> grouping=mylist.stream().collect(Collectors.partiotioningBy(n->n%2==0));
									
	even=grouping.get(true);
	odd=grouping.get(false);
	
	
	2nd highest salary employee
	
	emplist.stream().map(Employee::getSalary).distinct().sorted(Comparator.reverseOrder()).skip(1).findFirst().orElse(null);
	
	select distinct salary from employee order by salary desc limit 1 offset 1
	
	
	inter service communication - open feign
	
	create 2 thread for even and odd collection