Rasika Bayaskar
3:08 PM
let obj1 = { value: 10 };
let obj2 = obj1;

obj1.value = 20;

console.log(obj1.value); 
console.log(obj2.value);
let obj1 = [1,2,3];
let obj2 = obj1;

obj1 = [];
console.log(obj2.length);
Rasika Bayaskar
3:15 PM
3+2+"7"
Rasika Bayaskar
3:18 PM
const myObject = {
  name: "My Object",
  regularMethod: function() {
    console.log("Regular method 'this':", this);
  },
  arrowMethod: () => {
    console.log("Arrow method 'this':", this);
  }
};
Rasika Bayaskar
3:19 PM
console.log(x);
var x = 10;
console.log(x);
console.log(foo());

function foo() {
    return "Hello!";
}
Rasika Bayaskar
3:22 PM
console.log(1);

setTimeout(function () {
  console.log(2);
}, 0);

Promise.resolve()
  .then(function () {
    console.log(3);
  })
  .then(function () {
    console.log(4);
  });
Rasika Bayaskar
3:34 PM
give me the name of employees that have location as pune with out using inbuilt methods
const employees = [
  { name: "Prafulla Dhariwal", location: "Pune" },
  { name: "John Doe", location: "San Francisco" },
  { name: "Jane Smith", location: "Pune" },
];
TP2_Kamran_Frontend

event loop in javascript
closure in javascript
pure functions in javascript
shallow and deep copy in javascript
lexical scope in javascript
undefined and undeclared